@define doPostInstall
	# MAC: replace icon when doing a GUI build (aka "package")
	if bmk.Platform() == "macos" and bmk.AppType() == "gui" then
		#replace icon
		sys.CopyFile( %buildpath% .. "/Misc/appData/mac_icon.icns", %exepath% .. "/../Resources/" .. %outfile% .. ".icns" )

		#touch the icns file so some kind of "mac cache" gets redone
		bmk.Sys( "touch " ..  %exepath% .. "/../Resources/" .. %outfile% .. ".icns" )

		#replace info.plist
		#sys.CopyFile( %buildpath% .. "/Misc/appData/info.plist", %exepath% .. "/../info.plist" )
	end


	# WINDOWS/LINUX/MAC: strip binary when doing a releasebuild
	if bmk.IsDebugBuild() == 0 then
		if bmk.Platform() == "linux" then
			bmk.Sys( "strip --strip-all " .. %exepath% .. "/" .. %outfile% )
		elseif bmk.Platform() == "macos" then
			bmk.Sys( "strip " .. %exepath% .. "/" .. %outfile% )
		elseif bmk.Platform() == "win32" then
			local outFile = %outfile% .. ".exe"
#			if bmk.CPU() == "x86" then
#				outFile = outFile .. "_Win32.exe"
#			elseif bmk.CPU() == "x64" then
#				outFile = outFile .. "_Win64.exe"
#			else
#				outFile = outFile .. "_Win.exe"
#			end
			bmk.Sys( bmk.MinGWBinPath() .. "\\strip.exe --strip-all " .. %exepath% .. "\\" .. outFile )
		end
	end
@end

@define doCopyBinaries
	local inFile = %exepath% .. "/" .. %outfile%
	local outFile = %exepath% .. "/TVTower"

	if bmk.Platform() == "linux" and bmk.IsDebugBuild() == 0 then
		if bmk.CPU() == "x86" then
			outFile = outFile .. "_Linux32"
		elseif bmk.CPU() == "x64" then
			outFile = outFile .. "_Linux64"
		else
			outFile = outFile .. "_Linux"
		end

		#copying with "sys" does not copy file attributes (like x-bit) 
		#sys.CopyFile(inFile, outFile)
		bmk.Sys("cp " .. bmk.Quote(inFile) .. " " .. bmk.Quote(outFile))
	elseif bmk.Platform() == "win32" and bmk.IsDebugBuild() == 0 then
		inFile = inFile .. ".exe"

		if bmk.CPU() == "x86" then
			outFile = outFile .. "_Win32.exe"
		elseif bmk.CPU() == "x64" then
			outFile = outFile .. "_Win64.exe"
		else
			outFile = outFile .. "_Win.exe"
		end

		sys.CopyFile(inFile, outFile)
	end
@end

# run the post install
doPostInstall
# copy files accordingly
doCopyBinaries